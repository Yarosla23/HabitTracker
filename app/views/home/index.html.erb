<div>
  <canvas id="myBarChart"></canvas>
</div>

<div>
  <canvas id="myDoughnutChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
document.addEventListener('turbo:load', function () {
  const barCtx = document.getElementById('myBarChart');
  if (barCtx) {
    const existingBarChart = Chart.getChart('myBarChart');
    if (existingBarChart) {
      existingBarChart.destroy();
    }

    new Chart(barCtx, {
      type: 'bar',
      data: {
        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
        datasets: [{
          label: '# of Votes',
          data: [12, 19, 3, 5, 2, 3],
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });
  }

  const doughnutCtx = document.getElementById('myDoughnutChart');
  if (doughnutCtx) {
    const existingDoughnutChart = Chart.getChart('myDoughnutChart'); // Проверка существующего графика
    if (existingDoughnutChart) {
      existingDoughnutChart.destroy(); // Уничтожаем старый график, если он существует
    }

    const data = {
      labels: ['Привычки', 'Достигнутые привычки'],
      datasets: [{
        label: 'My First Dataset',
        data: [<%= @habits_count %>, 1],
        backgroundColor: [
          'rgb(54, 162, 235)',
          'rgb(255, 205, 86)'
        ],
        hoverOffset: 4
      }]
    };

    const plugin = {
      id: 'customCanvasBackgroundColor',
      beforeDraw: (chart, args, options) => {
        const { ctx } = chart;
        ctx.save();
        ctx.globalCompositeOperation = 'destination-over';
        ctx.fillStyle = options.color || '#99ffff';
        ctx.fillRect(0, 0, chart.width, chart.height);
        ctx.restore();
      }
    };

    const doughnutConfig = {
      type: 'doughnut',
      data: data,
      options: {
        plugins: {
          customCanvasBackgroundColor: {
            color: '#1e1e1e',
          }
        }
      },
      plugins: [plugin],
    };

    new Chart(doughnutCtx, doughnutConfig);
  }
});
</script>
